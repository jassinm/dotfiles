#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
File: xls2csv.py
Created: Wed 25 May 2011 08:56:06 AM EDT
Last Modified: Wed 25 May 2011 08:56:06 AM EDT
Author: Jassin MEKNASSI
Description: converts an xls file to a csv file
'''

from optparse import OptionParser
from xlrd import open_workbook
import sys
import csv

csvwriter = csv.writer(sys.stdout)


def encodeh(val):
    if isinstance(val, unicode):
        val = val.encode('utf-8')

        # val = val.replace('\n','')
        # val = val.replace(',','')

    return val


def xls2csv(filename, sheetindex=0):

    wbk = open_workbook(filename, encoding_override='utf-8')
    sheet = wbk.sheet_by_index(0)
    for rowidx in range(0, sheet.nrows):
        rowvalues = sheet.row_values(rowidx)
        rowvalues = [encodeh(r) for r in rowvalues]
        csvwriter.writerow(rowvalues)


def listsheetnames(filename):
    wbk = open_workbook(filename, encoding_override='utf-8')
    for sheetname in wbk.sheet_names():
        print sheetname


def printusage():
    print 'usage xlspytools [options] -h'
    print 'options: -------'
    print 'tocsv      : convert sheet to a csvfile'
    print 'listsheets : list sheetnames'


def main():
    toptions = set(['tocsv', 'listsheets'])

    if len(sys.argv) <= 2:
        printusage()
        return
    roption = sys.argv[1]

    if roption not in toptions:
        printusage()
        return
    parser = OptionParser()
    parser.add_option(
        '-f',
        '--file',
        dest='filename',
        action='store',
        type='string',
        help='inputfile',
        )

    if roption == 'tocsv':
        usage = 'usage : %prog tocsv'
        parser.add_option(
            '-i',
            '--index',
            dest='index',
            action='store',
            type='int',
            default = 0,
            help='sheet index',
            )
        (options, args) = parser.parse_args()
        parser.usage = usage
        if options.filename:
            xls2csv(options.filename,options.index)
        else:
            parser.print_help()
    elif roption == 'listsheets':

        usage = 'use : %prog listsheetnames'
        parser.usage = usage
        (options, args) = parser.parse_args()
        if options.filename:
            listsheetnames(options.filename)
        else:
            parser.print_help()
    else:
        printusage()


if __name__ == '__main__':
    status = main()
    sys.exit(status)
