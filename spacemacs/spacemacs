(defun dotspacemacs/layers ()
  "Configuration Layers declaration."
  (setq-default
   ;; List of additional paths where to look for configuration layers.
   ;; Paths must have a trailing slash (ie. `~/.mycontribs/')
   dotspacemacs-configuration-layer-path '()
   dotspacemacs-additional-packages '(ob-ipython autothemer gruvbox-theme darktooth-theme rainbow-mode darktooth-theme)
   ;; List of configuration layers to load. If it is the symbol `all' instead
   ;; of a list then all discovered layers will be installed.
   dotspacemacs-configuration-layers
   '(
     vimscript
     html
     sql
     javascript
     ansible
     yaml
     ;; --------------------------------------------------------
     ;; Example of useful layers you may want to use right away
     ;; Uncomment a layer name and press C-c C-c to install it
     ;; --------------------------------------------------------
     ;; better-defaults
     (git :variables
          git-gutter-use-fringe t)
     auto-completion
     os
     loco
     python
     ipython-notebook
     (ess :variables ess-enable-smart-equals t)
     syntax-checking
     org
     pandoc
     dash
     ;;(shell :variables shell-default-term-shell '/usr/local/bin/zsh)
     (shell :variables shell-default-shell 'eshell)
     ;;eyebrowse semantic smex gtags ranger theming tmux
     semantic
     smex
     gtags
     ranger
     tmux
     (c-c++ :variables c-c++-enable-clang-support t)
     fasd
     (spell-checking :variables spell-checking-enable-auto-dictionary t)
     latex
     scala
     (markdown :variables markdown-live-preview-engine 'vmd)
     )
   ;; A list of packages and/or extensions that will not be install and loaded.
   dotspacemacs-excluded-packages '()
   ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
   ;; are declared in a layer which is not a member of
   ;; the list `dotspacemacs-configuration-layers'
   dotspacemacs-delete-orphan-packages t
   ))

(defun dotspacemacs/init ()
  "Initialization function.
This function is called at the very startup of Spacemacs initialization
before layers configuration."

  (setq-default
   dotspacemacs-leader-key "SPC"
   dotspacemacs-major-mode-leader-key ","
   dotspacemacs-command-key ":"
   dotspacemacs-editing-style 'vim

   dotspacemacs-startup-banner nil
   dotspacemacs-maximized-at-startup t


   dotspacemacs-themes '(default
                         gruvbox
                         spacemacs-light
                         darktooth
                         monokai
                         leuven
                         )

    dotspacemacs-startup-lists '(recents bookmarks projects)

    dotspacemacs-default-font '(
                                ;;"Source Code Pro"
                                "PragmataPro"
                                :size 15
                                :weight normal
                                :width normal
                                :powerline-scale 1.1)
    dotspacemacs-search-tools '("ag" "pt" "ack" "grep"))
    dotspacemacs-mode-line-unicode-symbols nil
    dotspacemacs-whitespace-cleanup 'trailing
    dotspacemacs-highlight-delimiters 'all
)

(defun dotspacemacs/user-init ()
  (setq-default
   evil-escape-key-sequence "jk"
   evil-escape-delay 0.2

   evil-shift-round nil

   ;; Miscellaneous
   vc-follow-symlinks t

   ;; Whitespace mode
   whitespace-style '(face tabs tab-mark)
   whitespace-display-mappings
   '((newline-mark 10 [172 10])
     (tab-mark 9 [9655 9]))

   ;; Ranger
   ranger-override-dired t
   ranger-show-dotfiles t
   ranger-ignored-extensions '("mkv" "iso" "mp4" "mp3")

   ;;Ein
   ;;ein:use-auto-complete t


   ;; Org
   org-agenda-files '("~/.org")
   org-planning-line-re ""
   org-src-fontify-natively t
   org-src-preserve-indentation t
   org-src-tab-acts-natively t
   ;don't prompt me to confirm everytime I want to evaluate a block
   org-confirm-babel-evaluate nil
   ;;org-babel-python-command "ipython --no-banner --classic --no-confirm-exit --pprint"
   org-babel-load-languages '((emacs-lisp . t)
                              (lisp . t)
                              (R . t)
                              (sql . t)
                              (dot . t)
                              (sh . t)
                              (ipython . t)
                              (python . t))

   ;; don't evaluate babel code when publishing
   org-export-babel-evaluate nil
   org-src-fontify-natively t
   )
)
(defun my-common-hook ()
  (linum-mode 1)
  )

(defun dotspacemacs/user-config ()
  "This is were you can ultimately override default Spacemacs configuration.
This function is called at the very end of Spacemacs initialization."

  ;;(load-theme 'gruvbox t)
  (spacemacs/load-theme 'gruvbox)
  (add-hook 'doc-view-mode-hook 'auto-revert-mode)
  ;; Miscellaneous
  (add-hook 'text-mode-hook 'auto-fill-mode)
  (add-hook 'makefile-mode-hook 'whitespace-mode)

  ;; save when focus is lost
  (add-hook 'focus-out-hook (lambda () (save-some-buffers t)))



  ;; Org
  (add-hook 'org-mode-hook (lambda ()
                             (buffer-face-mode)
                             (org-display-inline-images)))

  (add-hook 'org-babel-after-execute-hook 'org-display-inline-images)


  ;; Some fixes for comint-style buffers
  (let ((comint-hooks '(eshell-mode-hook
                        term-mode-hook
                        erc-mode-hook
                        messages-buffer-mode-hook
                        comint-mode-hook)))
    (spacemacs/add-to-hooks (defun bb/no-hl-line-mode ()
                              (setq-local global-hl-line-mode nil))
                            comint-hooks)
    (spacemacs/add-to-hooks (defun bb/no-scroll-margin ()
                              (setq-local scroll-margin 0))
                            comint-hooks))

  (setq powerline-default-separator 'arrow)
  (evil-define-key 'motion neotree-mode-map  (kbd "o") 'neotree-enter)
  (evil-define-key 'motion neotree-mode-map  (kbd "r") 'neotree-refresh)

  (add-hook 'python-mode-hook
            'my-common-hook
            ;; ( lambda ()
            ;;   (setq python-shell-interpreter "python")
            ;;    setq anaconda-mode-server-script
            ;;    "/usr/local/lib/python2.7/site-packages/anaconda_mode.py")
            (setq python-indent-guess-indent-offset nil))

  (add-hook 'R-mode-hook 'my-common-hook)
  (add-hook 'sql-mode-hook 'my-common-hook)
  (add-hook 'scala-mode-hook 'my-common-hook)

  ;;(setq multi-term-program "/usr/local/bin/zsh")

  ;;(evil-leader/set-key "," 'helm-find-files)

  (setq linum-format "%4d \u2502 ")


  (add-to-list 'custom-theme-load-path "~/.emacs.d/private/themes")

  ;;Koma-script
  (eval-after-load 'ox '(require 'ox-koma-letter))
  (eval-after-load 'ox-koma-letter
    '(progn
       (add-to-list 'org-latex-classes
                    '("my-letter"
                      "\\documentclass[a4paper,10pt,DIV=9]\{scrlttr2\}
     \\usepackage[english]{babel}
     \[DEFAULT-PACKAGES]
     \[PACKAGES]
     \[EXTRA]"))

       (setq org-koma-letter-default-class "my-letter")))

  (defun custom-neotree-enter-hide ()
    (interactive)
    (neotree-enter)
    (neotree-hide))
  (defun custom-neotree-horizontal-split-hide ()
    (interactive)
    (neotree-enter-horizontal-split)
    (neotree-hide))
  (defun custom-neotree-vertical-split-hide ()
    (interactive)
    (neotree-enter-vertical-split)
    (neotree-hide))


  (with-eval-after-load 'neotree
    (define-key neotree-mode-map (kbd "o") 'custom-neotree-enter-hide)
    (define-key neotree-mode-map (kbd "i") 'custom-neotree-horizontal-split-hide)
    (define-key neotree-mode-map (kbd "I") 'custom-neotree-vertical-split-hide))


)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(ansi-color-names-vector
   ["#3c3836" "#fb4934" "#b8bb26" "#fabd2f" "#83a598" "#d3869b" "#8ec07c" "#ebdbb2"])
 '(compilation-message-face (quote default))
 '(custom-safe-themes
   (quote
    ("5d1434865473463d79ee0523c1ae60ecb731ab8d134a2e6f25c17a2b497dd459" default)))
 '(evil-want-Y-yank-to-eol nil)
 '(highlight-changes-colors ("#FD5FF0" "#AE81FF"))
 '(highlight-tail-colors
   (quote
    (("#49483E" . 0)
     ("#67930F" . 20)
     ("#349B8D" . 30)
     ("#21889B" . 50)
     ("#968B26" . 60)
     ("#A45E0A" . 70)
     ("#A41F99" . 85)
     ("#49483E" . 100))))
 '(magit-diff-use-overlays nil)
 '(package-selected-packages
   (quote
    (pcache highlight async d-mode company-dcd ivy flycheck-dmd-dub multiple-cursors websocket helm-purpose hide-comnt window-purpose imenu-list vmd-mode monokai-theme mmm-mode markdown-toc markdown-mode gh-md iedit auto-complete anaconda-mode auctex tern evil undo-tree grizzl request alert projectile git-commit hydra js2-mode simple-httpd s py-isort osx-dictionary dumb-jump org flyspell-correct sbt-mode scala-mode ess julia-mode anzu smartparens magit magit-popup flycheck with-editor company helm helm-core yasnippet avy ht f dash yapfify yaml-mode xterm-color ws-butler window-numbering which-key web-mode web-beautify volatile-highlights vimrc-mode vi-tilde-fringe uuidgen use-package toc-org tagedit stickyfunc-enhance srefactor sql-indent spacemacs-theme spaceline smex smeargle slim-mode shell-pop scss-mode sass-mode reveal-in-osx-finder restart-emacs ranger rainbow-mode rainbow-delimiters quelpa pyvenv pytest pyenv-mode py-yapf popwin pip-requirements persp-mode pcre2el pbcopy paradox pandoc-mode ox-pandoc osx-trash orgit org-projectile org-present org-pomodoro org-plus-contrib org-download org-bullets open-junk-file ob-ipython noflet neotree multi-term move-text magit-gitflow lorem-ipsum livid-mode live-py-mode linum-relative link-hint less-css-mode launchctl json-mode js2-refactor js-doc jinja2-mode jade-mode info+ indent-guide ido-vertical-mode hy-mode hungry-delete htmlize hl-todo highlight-parentheses highlight-numbers highlight-indentation help-fns+ helm-themes helm-swoop helm-pydoc helm-projectile helm-mode-manager helm-make helm-gtags helm-gitignore helm-flx helm-descbinds helm-dash helm-css-scss helm-company helm-c-yasnippet helm-ag gruvbox-theme google-translate golden-ratio gnuplot gitconfig-mode gitattributes-mode git-timemachine git-messenger git-link ggtags flyspell-correct-helm flycheck-pos-tip flx-ido fill-column-indicator fasd fancy-battery eyebrowse expand-region exec-path-from-shell evil-visualstar evil-visual-mark-mode evil-unimpaired evil-tutor evil-surround evil-search-highlight-persist evil-numbers evil-nerd-commenter evil-mc evil-matchit evil-magit evil-lisp-state evil-indent-plus evil-iedit-state evil-exchange evil-escape evil-ediff evil-args evil-anzu eval-sexp-fu ess-smart-equals ess-R-object-popup ess-R-data-view eshell-z eshell-prompt-extras esh-help ensime emmet-mode ein disaster define-word dash-at-point darktooth-theme dactyl-mode cython-mode company-web company-tern company-statistics company-quickhelp company-c-headers company-auctex company-anaconda column-enforce-mode coffee-mode cmake-mode clean-aindent-mode clang-format auto-yasnippet auto-highlight-symbol auto-dictionary auctex-latexmk ansible-doc ansible aggressive-indent adaptive-wrap ace-window ace-link ace-jump-helm-line ac-ispell)))
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   (quote
    ((20 . "#F92672")
     (40 . "#CF4F1F")
     (60 . "#C26C0F")
     (80 . "#E6DB74")
     (100 . "#AB8C00")
     (120 . "#A18F00")
     (140 . "#989200")
     (160 . "#8E9500")
     (180 . "#A6E22E")
     (200 . "#729A1E")
     (220 . "#609C3C")
     (240 . "#4E9D5B")
     (260 . "#3C9F79")
     (280 . "#A1EFE4")
     (300 . "#299BA6")
     (320 . "#2896B5")
     (340 . "#2790C3")
     (360 . "#66D9EF"))))
 '(vc-annotate-very-old-color nil)
 '(weechat-color-list
   (unspecified "#272822" "#49483E" "#A20C41" "#F92672" "#67930F" "#A6E22E" "#968B26" "#E6DB74" "#21889B" "#66D9EF" "#A41F99" "#FD5FF0" "#349B8D" "#A1EFE4" "#F8F8F2" "#F8F8F0")))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "PragmataPro" :foundry "nil" :slant normal :weight normal :height 151 :width normal))))
 '(company-tooltip-common ((t (:inherit company-tooltip :weight bold :underline nil))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :weight bold :underline nil)))))
(defun dotspacemacs/emacs-custom-settings ()
  "Emacs custom settings.
This is an auto-generated function, do not modify its content directly, use
Emacs customize menu instead.
This function is called at the very end of Spacemacs initialization."
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(ansi-color-names-vector
   ["#3c3836" "#fb4934" "#b8bb26" "#fabd2f" "#83a598" "#d3869b" "#8ec07c" "#ebdbb2"])
 '(compilation-message-face (quote default))
 '(custom-safe-themes
   (quote
    ("47aa6e82734866b2915781c6e1d9517bd897d45fe8aec360dd4b6294fec73068" "5d1434865473463d79ee0523c1ae60ecb731ab8d134a2e6f25c17a2b497dd459" default)))
 '(evil-want-Y-yank-to-eol nil)
 '(highlight-changes-colors ("#FD5FF0" "#AE81FF"))
 '(highlight-tail-colors
   (quote
    (("#49483E" . 0)
     ("#67930F" . 20)
     ("#349B8D" . 30)
     ("#21889B" . 50)
     ("#968B26" . 60)
     ("#A45E0A" . 70)
     ("#A41F99" . 85)
     ("#49483E" . 100))))
 '(magit-diff-use-overlays nil)
 '(package-selected-packages
   (quote
    (winum bind-key haml-mode company-ansible pug-mode bind-map skewer-mode pcache highlight async d-mode company-dcd ivy flycheck-dmd-dub multiple-cursors websocket helm-purpose hide-comnt window-purpose imenu-list vmd-mode monokai-theme mmm-mode markdown-toc markdown-mode gh-md iedit auto-complete anaconda-mode auctex tern evil undo-tree grizzl request alert projectile git-commit hydra js2-mode simple-httpd s py-isort osx-dictionary dumb-jump org flyspell-correct sbt-mode scala-mode ess julia-mode anzu smartparens magit magit-popup flycheck with-editor company helm helm-core yasnippet avy ht f dash yapfify yaml-mode xterm-color ws-butler window-numbering which-key web-mode web-beautify volatile-highlights vimrc-mode vi-tilde-fringe uuidgen use-package toc-org tagedit stickyfunc-enhance srefactor sql-indent spacemacs-theme spaceline smex smeargle slim-mode shell-pop scss-mode sass-mode reveal-in-osx-finder restart-emacs ranger rainbow-mode rainbow-delimiters quelpa pyvenv pytest pyenv-mode py-yapf popwin pip-requirements persp-mode pcre2el pbcopy paradox pandoc-mode ox-pandoc osx-trash orgit org-projectile org-present org-pomodoro org-plus-contrib org-download org-bullets open-junk-file ob-ipython noflet neotree multi-term move-text magit-gitflow lorem-ipsum livid-mode live-py-mode linum-relative link-hint less-css-mode launchctl json-mode js2-refactor js-doc jinja2-mode jade-mode info+ indent-guide ido-vertical-mode hy-mode hungry-delete htmlize hl-todo highlight-parentheses highlight-numbers highlight-indentation help-fns+ helm-themes helm-swoop helm-pydoc helm-projectile helm-mode-manager helm-make helm-gtags helm-gitignore helm-flx helm-descbinds helm-dash helm-css-scss helm-company helm-c-yasnippet helm-ag gruvbox-theme google-translate golden-ratio gnuplot gitconfig-mode gitattributes-mode git-timemachine git-messenger git-link ggtags flyspell-correct-helm flycheck-pos-tip flx-ido fill-column-indicator fasd fancy-battery eyebrowse expand-region exec-path-from-shell evil-visualstar evil-visual-mark-mode evil-unimpaired evil-tutor evil-surround evil-search-highlight-persist evil-numbers evil-nerd-commenter evil-mc evil-matchit evil-magit evil-lisp-state evil-indent-plus evil-iedit-state evil-exchange evil-escape evil-ediff evil-args evil-anzu eval-sexp-fu ess-smart-equals ess-R-object-popup ess-R-data-view eshell-z eshell-prompt-extras esh-help ensime emmet-mode ein disaster define-word dash-at-point darktooth-theme dactyl-mode cython-mode company-web company-tern company-statistics company-quickhelp company-c-headers company-auctex company-anaconda column-enforce-mode coffee-mode cmake-mode clean-aindent-mode clang-format auto-yasnippet auto-highlight-symbol auto-dictionary auctex-latexmk ansible-doc ansible aggressive-indent adaptive-wrap ace-window ace-link ace-jump-helm-line ac-ispell)))
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   (quote
    ((20 . "#F92672")
     (40 . "#CF4F1F")
     (60 . "#C26C0F")
     (80 . "#E6DB74")
     (100 . "#AB8C00")
     (120 . "#A18F00")
     (140 . "#989200")
     (160 . "#8E9500")
     (180 . "#A6E22E")
     (200 . "#729A1E")
     (220 . "#609C3C")
     (240 . "#4E9D5B")
     (260 . "#3C9F79")
     (280 . "#A1EFE4")
     (300 . "#299BA6")
     (320 . "#2896B5")
     (340 . "#2790C3")
     (360 . "#66D9EF"))))
 '(vc-annotate-very-old-color nil)
 '(weechat-color-list
   (unspecified "#272822" "#49483E" "#A20C41" "#F92672" "#67930F" "#A6E22E" "#968B26" "#E6DB74" "#21889B" "#66D9EF" "#A41F99" "#FD5FF0" "#349B8D" "#A1EFE4" "#F8F8F2" "#F8F8F0")))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "PragmataPro" :foundry "nil" :slant normal :weight normal :height 151 :width normal))))
 '(company-tooltip-common ((t (:inherit company-tooltip :weight bold :underline nil))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :weight bold :underline nil)))))
)
